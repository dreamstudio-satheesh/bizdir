
services:
  postgres:
    image: ankane/pgvector:latest
    container_name: business_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build: .
    container_name: business_api
    restart: always
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:strongpassword@postgres:5432/business_directory
      PYTHONPATH: "/app"
    volumes:
      - ./app:/app
    working_dir: /app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  laravel-app:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: business_laravel
    # restart: always
    depends_on:
      - postgres
      - app
    environment:
      APP_ENV: local
      APP_DEBUG: true
      APP_KEY: base64:randomkey
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      FASTAPI_URL: http://app:8000/api
    volumes:
      - ./laravel:/var/www/html
    working_dir: /var/www/html
    # command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=9000"]
    ports:
      - "9000:9000"

  nginx:
    image: nginx:latest
    container_name: business_nginx
    restart: always
    depends_on:
      - laravel-app
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"

volumes:
  postgres_data:
